###################
#  JAVA SNIPPETS  #
###################
snippet docs "document" b
/**
	Filename: ${1:`!v vim_snippets#Filename('$1.java', 'foo.java')`}
	Programmer: `!v g:snips_author`
	Email: `!v g:snips_email`
	Github: `!v g:snips_github`
	Description: a program about${0}
*/
endsnippet
snippet studocs "student detail" b
/*
	Filename: ${1:`!v vim_snippets#Filename('$1.java', 'foo.java')`}
	Student name: `!v g:snips_student_name`
	Class: `!v g:snips_student_class`
	Student number: `!v g:snips_student_number`
	Description: a program about${0}
*/
endsnippet
snippet jv.u "java util" b
import java.util.${1:*};${0}
endsnippet
# Scanner
snippet scan
Scanner ${1:kb} = new Scanner(System.in);${0}
endsnippet
snippet ip "input" b
${1:var} = ${2:kb}.next${0:Int}();
endsnippet
snippet prf "printf" b
System.out.print
endsnippet
snippet strf "format str" w
String.format("${2:%.2f}", ${1:str})${0}
endsnippet
snippet jtlrand "import trand" b
import java.util.concurrent.ThreadLocalRandom;
endsnippet
snippet trand "thread rand" b
Random rnd = ThreadLocalRandom.current();
endsnippet
snippet dbg "if (DEVELOPMENT) dbg" "re.match('^if \(DEVELOPMENT\) \{', snip.buffer[snip.line-1])" be
debugger;
endsnippet
snippet sop
System.out.println("${0}");
endsnippet
snippet fori "1.count 2.i 3.++" b
for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
	${4:${VISUAL}}
}
endsnippet
snippet dou "double" w
double 
endsnippet
snippet toSt "toString" b
public String toString() {
	return ${1:String};
}${0}
endsnippet
snippet jutil "import util library" b
import java.util.${1:*};${0}
endsnippet
snippet jlang "import lang library" b
import java.lang.${1:*};${0}
endsnippet
snippet jmath "import math library" b
import java.math.${1:*};${0}
endsnippet
snippet jxjop "import jxjop" b
import javax.swing.JOptionPane;
endsnippet

